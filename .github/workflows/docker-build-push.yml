name: Build and Push Multi-Platform Docker Image

on:
  push:
    tags: ["v*"]
  workflow_dispatch:

env:
  IMAGE_NAME: styx1000/fsdnsproxy
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Set version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "version=edge" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push amd64
        run: |
          docker build --platform linux/amd64 -t $IMAGE_NAME:${{ steps.version.outputs.version }}-amd64 .
          docker push $IMAGE_NAME:${{ steps.version.outputs.version }}-amd64

  build-arm64:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Set version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "version=edge" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push arm64
        run: |
          docker build --platform linux/arm64 -t $IMAGE_NAME:${{ steps.version.outputs.version }}-arm64 .
          docker push $IMAGE_NAME:${{ steps.version.outputs.version }}-arm64

  create-manifest:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Set version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "version=edge" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: Create and push manifests
        run: |
          # Create version-specific manifest
          docker manifest create $IMAGE_NAME:${{ steps.version.outputs.version }} \
            --amend $IMAGE_NAME:${{ steps.version.outputs.version }}-amd64 \
            --amend $IMAGE_NAME:${{ steps.version.outputs.version }}-arm64
          docker manifest push $IMAGE_NAME:${{ steps.version.outputs.version }}

          # Update latest to point to this version
          docker manifest create $IMAGE_NAME:latest \
            --amend $IMAGE_NAME:${{ steps.version.outputs.version }}-amd64 \
            --amend $IMAGE_NAME:${{ steps.version.outputs.version }}-arm64
          docker manifest push $IMAGE_NAME:latest

          # Cleanup
          docker rmi $IMAGE_NAME:${{ steps.version.outputs.version }}-amd64 $IMAGE_NAME:${{ steps.version.outputs.version }}-arm64 || true
